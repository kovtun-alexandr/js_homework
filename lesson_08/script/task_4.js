'use strict'

// –î–∞–Ω–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –Ω–æ–º–µ—Ä—ñ–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–º–µ—Ä—ñ–≤, —è–∫—ñ :
// –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É ¬´–ê¬ª
// –ø–µ—Ä—à–∞ —ñ –æ—Å—Ç–∞–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∏ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
// —Å–∫–ª–∞–¥–∞—é—Ç—å—Å—è –∑ –±—ñ–ª—å—à–µ –Ω—ñ—à 5 —Å–∏–º–≤–æ–ª—ñ–≤

if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
    // –¶–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –®–Ü —â–æ–± –Ω–µ —Ä–æ–±–∏—Ç–∏ –º–∞—Å–∏–≤ –≤ —Ä—É—á–Ω—É 
    // (–ê–ª–µ —É –º–µ–Ω–µ —î –ø–∏—Ç–∞–Ω–Ω—è ==> –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –±—É–∫–≤–∏ —ñ —Ü–∏—Ñ—Ä–∏ —Ç–∞–∫ —è–∫ —è –∑—Ä–æ–±–∏–≤, 
    // —á–∏ –∫—Ä–µ—â–µ –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ —Ü–µ —É —Ñ—É–Ω–∫—Ü—ñ—é getCarNumbers?)
    const letters = "–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•"
    const getLetter = () => letters[Math.floor(Math.random() * letters.length)]
    const getDigit = () => Math.floor(Math.random() * 10)

    function getCarNumbers(num) {
        const newArr = []
        for (let i = 0; i < num; i++) {
            const plate = `${getLetter()}${getLetter()}${getDigit()}${getDigit()}${getDigit()}${getDigit()}${getLetter()}${getLetter()}`;
            newArr.push(plate);
        }

        return newArr
    }

    const carNumbers = getCarNumbers(30)

    function getSearchFirstLetter(symbol, arr) {
        let count = 0
        const newCarNumbers = []

        for (let i = 0; i < arr.length; i++) {
            if (arr[i].charAt(0) === symbol) {
                newCarNumbers.push(arr[i])
                count++
            }
        }

        if (count === 0) return `–ù–∞–∂–∞–ª—å –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —è–∫–∏–π –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–∞ ${symbol}`
        return `${count} : ${newCarNumbers}`
    }

    function getSameLetters(arr) {
        let count = 0
        const newCarNumbers = []

        for (let i = 0; i < arr.length; i++) {
            const str = arr[i]
            if (str.charAt(0) === str[str.length - 1]) {
                newCarNumbers.push(str)
                count++
            }
        }

        if (count === 0) return `–ù–∞–∂–∞–ª—å –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å –ø–µ—Ä—à–∞ —ñ –æ—Å—Ç–∞–Ω–Ω—è –ª—ñ—Ç–µ–µ—Ä–∞`
        return `–£ ${count} –ø–µ—Ä—à–∞ —ñ –æ—Å—Ç–∞–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∏ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å : ${newCarNumbers}`
    }

    function getNumberLength(arr) {
        let count = 0

        for (let i = 0; i < arr.length; i++) {
            const str = arr[i];
            if (str.length > 5) count++
        }

        return count
    }

    function getPrintMessages(...parameters) {
        document.write(`
            <ul>
                <li>–ü–æ—á–∏–Ω–∞—é—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É ¬´–ê¬ª ${parameters[0]}</li>
                <li>${parameters[1]}</li>
                <li>–£ ${parameters[2]}-–π –Ω–æ–º–µ—Ä—ñ–≤, –¥–æ–≤–∂–∏–Ω–∞ —Å–∫–ª–∞–¥–∞—é—Ç—å—Å—è –∑ –±—ñ–ª—å—à–µ –Ω—ñ—à 5 —Å–∏–º–≤–æ–ª—ñ–≤</li>
            </ul>    
        `)
    }

    document.write(`
        <h2 class="homework__title">–†—ñ—à–µ–Ω–Ω—è:</h2>
        <p>–ù–æ–º–µ—Ä–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤:</p>
        <ul>
            <li style="width:100%;overflow-x:scroll;">${carNumbers}</li>
        </ul>
        <hr>
    `)

    getPrintMessages(
        getSearchFirstLetter('–ê', carNumbers),
        getSameLetters(carNumbers),
        getNumberLength(carNumbers)
    )
} else {
    alert(`–ù–∞–∂–∞–ª—å –≤–∏ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –≤—ñ–¥ —Ç–µ—Å—Ç–∞ üòû`)
}