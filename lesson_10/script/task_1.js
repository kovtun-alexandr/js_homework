'use strict'

// –î–∞–Ω–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ü—ñ–Ω –Ω–∞ —Ü—ñ–Ω–Ω—ñ –ø–∞–ø–µ—Ä–∏ –∑–∞ –¥–µ—è–∫–∏–π –ø–µ—Ä—ñ–æ–¥ (–∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –≤—ñ–¥ 1 –¥–æ 10000)
// 1) –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —É —è–∫–æ–º—É —î —Ç—ñ–ª—å–∫–∏ —Ç—ñ, —â–æ –±—ñ–ª—å—à—ñ –∑–∞ 1000 –≥—Ä–Ω.
// 2) –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —É —è–∫–æ–º—É —î –Ω–æ–º–µ—Ä–∏ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö, —â–æ –±—ñ–ª—å—à—ñ –∑–∞ 1000 –≥—Ä–Ω.
// 3) –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑ —Ç–∏—Ö —Ü—ñ–Ω, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
// 4) –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç–∏–º–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ü—ñ–Ω —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö —Å—Ç–æ—Å–æ–≤–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ.
// 5) –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω —Ü—ñ–Ω.
// 6) –í–∏–∑–Ω–∞—á–∏—Ç–∏, —á–∏ —î —Ü—ñ–Ω–∞, —â–æ –º–µ–Ω—à–µ 1000.
// 7) –í–∏–∑–Ω–∞—á–∞—Ç–∏, —á–∏ —É—Å—ñ —Ü—ñ–Ω–∏ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 8) –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ü—ñ–Ω, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 9) –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É —Ü—ñ–Ω, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 10) –ó–Ω–∞–π—Ç–∏ –ø–µ—Ä—à—É —Ü—ñ–Ω—É, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 11) –ó–Ω–∞–π—Ç–∏ —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ—ó —Ü—ñ–Ω–∏, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 12) –ó–Ω–∞–π—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—é —Ü—ñ–Ω—É, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000.
// 13) –ó–Ω–∞–π—Ç–∏ —ñ–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ü—ñ–Ω–∏, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000

if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
    const ramdomNum = () => Math.floor(Math.random() * 10000) + 1

    function getRandomPriceList(num) {
        const newArr = new Array(num).fill(0)
        const pricesArr = newArr.map((price) => price = ramdomNum())

        return pricesArr
    }

    const pricesList = getRandomPriceList(20)

    // 1)
    function getSortPriceMore(prises) {
        const sortPrices = prises.filter((price) => price > 1000)

        return sortPrices
    }

    // 2)
    function getSortPriceIndexMore(prices) {
        const indexArr = prices
            .map((price, index) => (price > 1000) ? index : -1)
            .filter((index) => index !== -1)

        return indexArr
    }

    // 3) !!!–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ –Ω–µ –∑—Ä–æ–±–∏–≤ –∂o–¥–Ω–æ–≥–æ —Ä—ñ—à–µ–Ω—è, –ª–∏—à–µ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –®–Ü üòû
    function getLargerValuesPrevious(prices) {
        // const newPrices = prices.filter((price, index) => index > 0 && price > prices[index - 1])

        const newPrices = prices.reduce((prevPrice, price, index, baseArr) => {
            if (index > 0 && price > baseArr[index - 1]) {
                prevPrice.push(price);
            }
            return prevPrice;
        }, []);

        return newPrices
    }

    // 4) –¢—É—Ç —Ç–∞–∫–æ–∂ —Ç—Ä—ñ—à–∫–∏ –∑–∞–ø–∏—Ç–∞–≤ —É –®–Ü, –Ω–µ –∑–æ–≤—Å—ñ–º —Ä–æ–∑—É–º—ñ–≤ –ª–æ–≥—ñ–∫—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è
    function getValuePricePercentMaximum(prices) {
        const maxPrice = Math.max(...prices);
        const pricePercent = prices.map((price) => ((price / maxPrice) * 100).toFixed(2))

        return pricePercent
    }

    // 5)
    function getChangesPriceNumber(prices) {
        const changesPrice = prices.reduce((prevPrice, price) => (prevPrice !== price ? prevPrice + 1 : price), 0)

        return changesPrice
    }

    // 6)
    function getPriceLessMore(prices) {
        let str = ''
        const lessPrice = prices.some((price) => price < 1000)

        if (lessPrice) str = '–¢–∞–∫'
        else str = '–ù—ñ'

        return str
    }

    // 7) 
    function getAllPricesMore(prices) {
        let str = ''
        const sortPrices = prices.every((price) => price > 1000)

        if (sortPrices) str = '–¢–∞–∫'
        else str = '–ù—ñ'

        return str
    }

    // 8)
    function getCountPriceMore(prices) {
        const countPrice = prices.reduce((prevCount, price) => (price > 1000 ? prevCount + 1 : prevCount),
            0
        )

        return countPrice
    }

    // 9)
    function getSumPriceMore(prices) {
        const sumPrice = prices.reduce((prevPrice, price) => (price > 1000 ? prevPrice + price : prevPrice),
            0
        )

        return sumPrice
    }

    // 10)
    function getFirstPriceMore(prices) {
        const firstPrice = prices.find((price) => price > 1000)

        return firstPrice
    }

    // 11)
    function getFirstPriceIndexMore(prices) {
        const firstIndex = prices.findIndex((price) => price > 1000)

        return firstIndex
    }

    // 12)
    function getLastPriceMore(prices) {
        const lastPrice = prices.findLast((price) => price > 1000)

        return lastPrice
    }

    // 13)
    function getLastPriceIndexMore(prices) {
        const lastIndex = prices.findLastIndex((price) => price > 1000)

        return lastIndex
    }

    function getPrintMessages(str, arr) {
        document.write(`<div>${str} - \[${arr}\]</div>`)
    }

    document.write(`
        <h2 class="homework__title">–†—ñ—à–µ–Ω–Ω—è:</h2>
        <ul>
            <li>–Ü—Å—Ç–æ—Ä—ñ—è —Ü—ñ–Ω–∏ –Ω–∞ —Ü—ñ–Ω–Ω—ñ –ø–∞–ø–µ—Ä–∏: \[${pricesList}\]</li>
        </ul>
        <hr>
    `)

    const taskFirst = '1) –ú–∞—Å–∏–≤, —É —è–∫–æ–º—É —î —Ç—ñ–ª—å–∫–∏ —Ç—ñ, —â–æ –±—ñ–ª—å—à—ñ –∑–∞ 1000 –≥—Ä–Ω'
    const taskSecond = '2) –ú–∞—Å–∏–≤, —É —è–∫–æ–º—É —î –Ω–æ–º–µ—Ä–∏ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö, —â–æ –±—ñ–ª—å—à—ñ –∑–∞ 1000 –≥—Ä–Ω'
    const taskThird = '3) –ú–∞—Å–∏–≤ –∑ —Ü—ñ–Ω, —è–∫–µ –±—ñ–ª—å—à–µ –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è'
    const taskFourth = '4) –¶—ñ–Ω–∏ —â–æ –º—ñ—Å—Ç—è—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö —Å—Ç–æ—Å–æ–≤–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ'
    const taskFifth = '5) –¶—ñ–Ω–∞ –∑–º—ñ–Ω—é–≤–∞–ª–∞—Å—å —Ä–∞–∑—ñ–≤'
    const taskSixth = '6) –ß–∏ —î —Ü—ñ–Ω–∞, —â–æ –º–µ–Ω—à–µ 1000'
    const taskSeventh = '7) –ß–∏ —É—Å—ñ —Ü—ñ–Ω–∏ –±—ñ–ª—å—à–µ –∑–∞ 1000?'
    const taskEighth = '8) –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ü—ñ–Ω, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'
    const taskNinth = '9) —Å—É–º—É —Ü—ñ–Ω, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'
    const taskTenth = '10) –ü–µ—Ä—à–∞ —Ü—ñ–Ω–∞, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'
    const taskEleventh = '11) –Ü–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ—ó —Ü—ñ–Ω–∏, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'
    const taskTwelfth = '12) –û—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∞, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'
    const taskThirteenth = '13) –Ü–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ü—ñ–Ω–∏, —â–æ –±—ñ–ª—å—à–µ –∑–∞ 1000'

    getPrintMessages(taskFirst, getSortPriceMore(pricesList))
    getPrintMessages(taskSecond, getSortPriceIndexMore(pricesList))
    getPrintMessages(taskThird, getLargerValuesPrevious(pricesList))
    getPrintMessages(taskFourth, getValuePricePercentMaximum(pricesList))
    getPrintMessages(taskFifth, getChangesPriceNumber(pricesList))
    getPrintMessages(taskSixth, getPriceLessMore(pricesList))
    getPrintMessages(taskSeventh, getAllPricesMore(pricesList))
    getPrintMessages(taskEighth, getCountPriceMore(pricesList))
    getPrintMessages(taskNinth, getSumPriceMore(pricesList))
    getPrintMessages(taskTenth, getFirstPriceMore(pricesList))
    getPrintMessages(taskEleventh, getFirstPriceIndexMore(pricesList))
    getPrintMessages(taskTwelfth, getLastPriceMore(pricesList))
    getPrintMessages(taskThirteenth, getLastPriceIndexMore(pricesList))
} else {
    alert(`–ù–∞–∂–∞–ª—å –≤–∏ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –≤—ñ–¥ —Ç–µ—Å—Ç–∞ üòû`)
}