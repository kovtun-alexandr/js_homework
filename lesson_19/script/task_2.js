'use strict'

// –î–∞–Ω–æ 3 —Ç–∞–±–ª–∏—Ü—ñ —Ä–æ–∑–º—ñ—Ä–Ω–æ—Å—Ç—ñ 3*3 –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ —á–∏—Å–ª–∞–º–∏. –Ø–∫—â–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∫–ª—ñ–∫ –Ω–∞ 
// —è–∫—ñ–π—Å—å —ñ–∑ –∫–ª—ñ—Ç–∏–Ω–æ–∫, —Ç–æ –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ –¥–æ–¥–∞—î—Ç—å—Å—è —á–µ—Ä–≤–æ–Ω–∞ —Ä–∞–º–∫–∞ 
// (—Å–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–¥–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–ª—ñ–∫—ñ–≤ –±—ñ–ª—è –Ω–∞–∑–≤–∏ —Ç–∞–±–ª–∏—Ü—ñ –∑ 
// –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ–¥–∞–Ω–æ–≥–æ –¥–ª—è —Ü—å–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞).

if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {

    function createElement(tag, options = {}) {
        const el = document.createElement(tag)

        if(options.classes)
            el.classList.add(...options.classes)
        if(options.attr)
            el.setAttribute(options.attr.name, options.attr.value)
        if(options.text)
            el.textContent = options.text

        return el
    }

    function createTable(row, cell) {
        const tableWrap = createElement('div', {
            classes: ['table__wrap']
        })
        const tableTitleBlock = createElement('div',{classes: ['table__header']})
        const tableTitle = createElement('h3', {
            classes: ['table__title'],
            text: `Table `
        })
        const tableCount = createElement('p', {
            classes: ['table__count'],
            text: 'Clicks: 0'
        })
        const tableBlock = createElement('table', {
            classes: ['table__block'],
            attr: {
                name: 'count', 
                value: '0'
            }
        })


        for (let indexRow = 0; indexRow < row; indexRow++) {
            let tableRow = createElement('tr', {classes: ['table__row']})

            for (let indexCell = 0; indexCell < cell; indexCell++) {
                let tableData = createElement('td', {
                    classes: ['table__data'],
                    text: `${Math.random().toFixed(2)}`
                })  
                tableRow.append(tableData)
            }
            tableBlock.append(tableRow)   
        }

        tableTitleBlock.append(tableTitle, tableCount)
        tableWrap.append(tableTitleBlock, tableBlock)

        return tableWrap
    }

    function printTab (count = 0, row, cell) {
        for (let i = 0; i < (count || 1); i++) {
            const table = createTable(row,cell)
            table.querySelector('.table__title').textContent = `Table #${i + 1}`
            document.querySelector('.table').append(table)              
        }
    }

    function countingPress(e) {
        const table = e.target.closest('.table__wrap')
        
        if (!table) return
        
        const tableCount = table.querySelector('.table__count')
        let contClick = parseInt(table.getAttribute('count')) || 0

        contClick++
        table.setAttribute('count', contClick)
        table.querySelector('.table__block').classList.add('active')
        tableCount.textContent = `Clicks: ${contClick}`
    }
    
    window.addEventListener('load', () => {
        printTab(3, 3, 3)
        document.querySelector('.table').addEventListener('click', countingPress)
    })
} else {
    alert(`–ù–∞–∂–∞–ª—å –≤–∏ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –≤—ñ–¥ —Ç–µ—Å—Ç–∞ üòû`)
}